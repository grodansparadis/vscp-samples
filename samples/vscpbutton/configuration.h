/////////////////////////////////////////////////////////////////////////////
// Name:        configuration.h
// Purpose:     
// Author:      Ake Hedman
// Modified by: 
// Created:     25/01/2009 15:17:59
// RCS-ID:      
// Copyright:   Copyright (C) 2007 D of Scandinavia 
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 25/01/2009 15:17:59

#ifndef _CONFIGURATION_H_
#define _CONFIGURATION_H_


/*!
 * Includes
 */

////@begin includes
#include "configuration_symbols.h"
#include "wx/propdlg.h"
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_CONFIGURATION 10002
#define ID_PANEL_HOST_SETTINGS 10003
#define ID_TEXTCTRL18 10018
#define ID_TEXTCTRL19 10019
#define ID_TEXTCTRL20 10020
#define ID_TEXTCTRL21 10024
#define ID_TEXTCTRL22 10025
#define ID_BUTTON 10026
#define ID_PANEL_EVENT_SETTINGS 10001
#define ID_COMBOBOX 10000
#define ID_COMBOBOX1 10004
#define ID_CHOICE 10005
#define ID_TEXTCTRL 10006
#define ID_TEXTCTRL1 10007
#define ID_TEXTCTRL2 10008
#define ID_TEXTCTRL3 10009
#define ID_TEXTCTRL4 10010
#define ID_TEXTCTRL5 10011
#define ID_TEXTCTRL6 10012
#define ID_TEXTCTRL7 10013
#define ID_TEXTCTRL8 10014
#define ID_TEXTCTRL9 10015
#define ID_TEXTCTRL10 10016
#define ID_TEXTCTRL11 10017
#define ID_TEXTCTRL12 10021
#define ID_TEXTCTRL13 10022
#define ID_TEXTCTRL14 10023
#define ID_TEXTCTRL15 10032
#define ID_TEXTCTRL16 10035
#define ID_TEXTCTRL17 10036
#define SYMBOL_CONFIGURATION_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX
#define SYMBOL_CONFIGURATION_TITLE _("Configuration")
#define SYMBOL_CONFIGURATION_IDNAME ID_CONFIGURATION
#define SYMBOL_CONFIGURATION_SIZE wxSize(400, 300)
#define SYMBOL_CONFIGURATION_POSITION wxDefaultPosition
////@end control identifiers


/*!
 * Configuration class declaration
 */

class Configuration: public wxPropertySheetDialog
{    
    DECLARE_DYNAMIC_CLASS( Configuration )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    Configuration();
    Configuration( wxWindow* parent, wxWindowID id = SYMBOL_CONFIGURATION_IDNAME, const wxString& caption = SYMBOL_CONFIGURATION_TITLE, const wxPoint& pos = SYMBOL_CONFIGURATION_POSITION, const wxSize& size = SYMBOL_CONFIGURATION_SIZE, long style = SYMBOL_CONFIGURATION_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_CONFIGURATION_IDNAME, const wxString& caption = SYMBOL_CONFIGURATION_TITLE, const wxPoint& pos = SYMBOL_CONFIGURATION_POSITION, const wxSize& size = SYMBOL_CONFIGURATION_SIZE, long style = SYMBOL_CONFIGURATION_STYLE );

    /// Destructor
    ~Configuration();

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();

////@begin Configuration event handler declarations

////@end Configuration event handler declarations

////@begin Configuration member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end Configuration member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin Configuration member variables
    wxTextCtrl* m_RemoteServerDescription;
    wxTextCtrl* m_RemoteServerURL;
    wxTextCtrl* m_RemoteServerPort;
    wxTextCtrl* m_RemoteServerUsername;
    wxTextCtrl* m_RemoteServerPassword;
    wxComboBox* m_strVscpClass;
    wxComboBox* m_strVscpType;
    wxChoice* m_wxChoicePriority;
    wxTextCtrl* m_strGUID15;
    wxTextCtrl* m_wxStrGUID14;
    wxTextCtrl* m_wxStrGUID13;
    wxTextCtrl* m_wxStrGUID12;
    wxTextCtrl* m_wxStrGUID11;
    wxTextCtrl* m_wxStrGUID10;
    wxTextCtrl* m_wxStrGUID9;
    wxTextCtrl* m_wxStrGUID8;
    wxTextCtrl* m_wxStrGUID7;
    wxTextCtrl* m_wxStrGUID6;
    wxTextCtrl* m_wxStrGUID5;
    wxTextCtrl* m_wxStrGUID4;
    wxTextCtrl* m_wxStrGUID3;
    wxTextCtrl* m_wxStrGUID2;
    wxTextCtrl* m_wxStrGUID1;
    wxTextCtrl* m_wxStrGUID0;
    wxTextCtrl* m_strVscpData;
    wxTextCtrl* m_strNote;
////@end Configuration member variables
};

#endif
    // _CONFIGURATION_H_
